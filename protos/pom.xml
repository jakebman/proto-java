<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>protobuf-example-root</artifactId>
    <groupId>com.boeckerman.jake.protobuf</groupId>
    <version>${revision}${sha1}${changelist}</version>
  </parent>

  <artifactId>protos</artifactId>

  <name>protos</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java -->
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
     </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>plugin</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope> <!-- like compile time, but not transitive. Closest I could find to "is needed by a plugin"-->
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>plugin-api</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
      <!-- plugin-api is a transitive dependency of plugin, so we already use plugin-api implicitly.
         But! there's a chance for subtle errors if we ever reference com.boeckerman.jake.protobuf.Extensions
         or any of the other generated classes ("provided" scope means "compile, expecting this object to exist
         at runtime", and therefore, if the object is missing at runtime? Errors *galore*) -->
    </dependency>
  </dependencies>

  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
<!--        <version>1.6.0</version>-->
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- Common protoc settings go here. If you want to modify how the plugin is used,
                see the profile usePlugin below, which is active by default -->
          <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>useCustomProtocPlugin</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.xolstice.maven.plugins</groupId>
            <artifactId>protobuf-maven-plugin</artifactId>
            <configuration>
              <protocPlugins>
                <!-- https://www.xolstice.org/protobuf-maven-plugin/examples/protoc-plugin.html -->
                <protocPlugin>
                  <id>jakeProtoPlugin</id>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>plugin</artifactId>
                  <version>${project.version}</version>
                  <mainClass>com.boeckerman.jake.protobuf.Plugin</mainClass>
                  <args>DEBUG,ENABLE_EVERYWHERE</args>
                </protocPlugin>
              </protocPlugins>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
